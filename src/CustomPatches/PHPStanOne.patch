--- project/vendor/phpstan/phpstan/src/Command/ErrorsConsoleStyle.php	(date 1286705410000)
+++ project/vendor/phpstan/phpstan/src/Command/ErrorsConsoleStyle.php	(date 1286705410000)
@@ -17,6 +17,9 @@
 	/** @var \Symfony\Component\Console\Helper\ProgressBar */
 	private $progressBar;

+	/** @var int */
+	private $counter = 1;
+
 	public function __construct(InputInterface $input, OutputInterface $output)
 	{
 		parent::__construct($input, $output);
@@ -81,7 +84,8 @@
 		if (!$this->showProgress) {
 			return;
 		}
-		parent::progressStart($max);
+
+		$this->createProgressBar($max);
 	}

 	/**
@@ -90,19 +94,28 @@
 	 */
 	public function progressAdvance($step = 1): void
 	{
-		if (!$this->showProgress) {
-			return;
-		}
-		if ($step > 0) {
-			$stepTime = (time() - $this->progressBar->getStartTime()) / $step;
-			if ($stepTime > 0 && $stepTime < 1) {
-				$this->progressBar->setRedrawFrequency((int) (1 / $stepTime));
-			} else {
-				$this->progressBar->setRedrawFrequency(1);
-			}
-		}
+        if (!$this->showProgress) {
+            return;
+        }
+
+        $numberLength = strlen((string) $this->progressBar->getMaxSteps());
+        $maximumWidth = 50;
+
+        $message = sprintf(
+            sprintf(' %%%sd / %%%sd (%%3d%%%%)', $numberLength, $numberLength),
+            $this->counter,
+            $this->progressBar->getMaxSteps(),
+            round(($this->counter / $this->progressBar->getMaxSteps()) * 100)
+        );
+
+        $this->write('.');
+        $this->write($this->counter % $maximumWidth === 0 ? sprintf('%s%s', $message, PHP_EOL) : '');
+
+        if ($this->progressBar->getMaxSteps() == $this->counter) {
+            $this->write(sprintf('%s%s%s', str_repeat(' ', $maximumWidth - $this->counter % $maximumWidth), $message, PHP_EOL));
+        }

-		$this->progressBar->setProgress($this->progressBar->getProgress() + $step);
+        $this->counter++;
 	}

 	public function progressFinish(): void
@@ -110,7 +123,6 @@
 		if (!$this->showProgress) {
 			return;
 		}
-		parent::progressFinish();
 	}

 }
