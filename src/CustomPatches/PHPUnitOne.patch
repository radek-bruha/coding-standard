--- project/vendor/phpunit/phpunit/src/TextUI/TestRunner.php	(date 1286705410000)
+++ project/vendor/phpunit/phpunit/src/TextUI/TestRunner.php	(date 1286705410000)
@@ -302,10 +302,6 @@
             $this->printer->setShowProgressAnimation(!$arguments['noInteraction']);
         }
 
-        $this->printer->write(
-            Version::getVersionString() . "\n"
-        );
-
         self::$versionStringPrinted = true;
 
         if ($arguments['verbose']) {
@@ -575,8 +571,6 @@
             exit(self::SUCCESS_EXIT);
         }
 
-        $this->printer->write("\n");
-
         if (isset($codeCoverage)) {
             $result->setCodeCoverage($codeCoverage);
 
@@ -632,38 +626,24 @@
 
         if (isset($codeCoverage)) {
             if (isset($arguments['coverageClover'])) {
-                $this->codeCoverageGenerationStart('Clover XML');
-
                 try {
                     $writer = new CloverReport;
                     $writer->process($codeCoverage, $arguments['coverageClover']);
-
-                    $this->codeCoverageGenerationSucceeded();
-
                     unset($writer);
                 } catch (CodeCoverageException $e) {
-                    $this->codeCoverageGenerationFailed($e);
                 }
             }
 
             if (isset($arguments['coverageCrap4J'])) {
-                $this->codeCoverageGenerationStart('Crap4J XML');
-
                 try {
                     $writer = new Crap4jReport($arguments['crap4jThreshold']);
                     $writer->process($codeCoverage, $arguments['coverageCrap4J']);
-
-                    $this->codeCoverageGenerationSucceeded();
-
                     unset($writer);
                 } catch (CodeCoverageException $e) {
-                    $this->codeCoverageGenerationFailed($e);
                 }
             }
 
             if (isset($arguments['coverageHtml'])) {
-                $this->codeCoverageGenerationStart('HTML');
-
                 try {
                     $writer = new HtmlReport(
                         $arguments['reportLowUpperBound'],
@@ -675,27 +655,17 @@
                     );
 
                     $writer->process($codeCoverage, $arguments['coverageHtml']);
-
-                    $this->codeCoverageGenerationSucceeded();
-
                     unset($writer);
                 } catch (CodeCoverageException $e) {
-                    $this->codeCoverageGenerationFailed($e);
                 }
             }
 
             if (isset($arguments['coveragePHP'])) {
-                $this->codeCoverageGenerationStart('PHP');
-
                 try {
                     $writer = new PhpReport;
                     $writer->process($codeCoverage, $arguments['coveragePHP']);
-
-                    $this->codeCoverageGenerationSucceeded();
-
                     unset($writer);
                 } catch (CodeCoverageException $e) {
-                    $this->codeCoverageGenerationFailed($e);
                 }
             }
 
@@ -721,17 +691,11 @@
             }
 
             if (isset($arguments['coverageXml'])) {
-                $this->codeCoverageGenerationStart('PHPUnit XML');
-
                 try {
                     $writer = new XmlReport(Version::id());
                     $writer->process($codeCoverage, $arguments['coverageXml']);
-
-                    $this->codeCoverageGenerationSucceeded();
-
                     unset($writer);
                 } catch (CodeCoverageException $e) {
-                    $this->codeCoverageGenerationFailed($e);
                 }
             }
         }
@@ -1308,37 +1272,4 @@
             $arguments['reverseList']
         );
     }
-
-    private function codeCoverageGenerationStart(string $format): void
-    {
-        $this->printer->write(
-            \sprintf(
-                "\nGenerating code coverage report in %s format ... ",
-                $format
-            )
-        );
-
-        Timer::start();
-    }
-
-    private function codeCoverageGenerationSucceeded(): void
-    {
-        $this->printer->write(
-            \sprintf(
-                "done [%s]\n",
-                Timer::secondsToTimeString(Timer::stop())
-            )
-        );
-    }
-
-    private function codeCoverageGenerationFailed(\Exception $e): void
-    {
-        $this->printer->write(
-            \sprintf(
-                "failed [%s]\n%s\n",
-                Timer::secondsToTimeString(Timer::stop()),
-                $e->getMessage()
-            )
-        );
-    }
 }
