--- project/vendor/phpstan/phpstan/src/Command/ErrorFormatter/TableErrorFormatter.php	(date 1286705410000)
+++ project/vendor/phpstan/phpstan/src/Command/ErrorFormatter/TableErrorFormatter.php	(date 1286705410000)
@@ -41,34 +41,10 @@
 	): int
 	{
 		if (!$analysisResult->hasErrors()) {
-			$style->success('No errors');
-			if ($this->showTipsOfTheDay) {
-				if ($analysisResult->isDefaultLevelUsed()) {
-					$style->writeln('ðŸ’¡ Tip of the Day:');
-					$style->writeln(sprintf(
-						"PHPStan is performing only the most basic checks.\nYou can pass a higher rule level through the <fg=cyan>--%s</> option\n(the default and current level is %d) to analyse code more thoroughly.",
-						AnalyseCommand::OPTION_LEVEL,
-						AnalyseCommand::DEFAULT_LEVEL
-					));
-					$style->writeln('');
-				} elseif (
-					!$this->checkThisOnly
-					&& $analysisResult->hasInferrablePropertyTypesFromConstructor()
-					&& !$this->inferPrivatePropertyTypeFromConstructor
-				) {
-					$projectConfigFile = 'phpstan.neon';
-					if ($analysisResult->getProjectConfigFile() !== null) {
-						$projectConfigFile = $this->relativePathHelper->getRelativePath($analysisResult->getProjectConfigFile());
-					}
-					$style->writeln('ðŸ’¡ Tip of the Day:');
-					$style->writeln("One or more properties in your code do not have a phpDoc with a type\nbut it could be inferred from the constructor to find more bugs.");
-					$style->writeln(sprintf('Use <fg=cyan>inferPrivatePropertyTypeFromConstructor: true</> in your <fg=cyan>%s</> to try it out!', $projectConfigFile));
-					$style->writeln('');
-				}
-			}
-
-			return 0;
-		}
+			return 0;
+		}
+
+		$style->writeln('');

 		/** @var array<string, \PHPStan\Analyser\Error[]> $fileErrors */
 		$fileErrors = [];
