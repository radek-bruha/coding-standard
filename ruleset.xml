<?xml version='1.0'?>
<ruleset xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='./vendor/squizlabs/php_codesniffer/phpcs.xsd' name='Bruha Coding Standard'>
    <arg value="p"/>
    <arg name="extensions" value="php"/>
    <arg name="report" value="Bruha\CodingStandard\CustomReports\PhpCodeSnifferReport"/>

    <rule ref='Generic'>
        <exclude name='Generic.Arrays.DisallowShortArraySyntax.Found'/>
        <exclude name='Generic.Classes.OpeningBraceSameLine.BraceOnNewLine'/>
        <exclude name='Generic.Commenting.DocComment.ContentAfterOpen'/>
        <exclude name='Generic.Commenting.DocComment.ContentBeforeClose'/>
        <exclude name='Generic.Commenting.DocComment.Empty'/>
        <exclude name='Generic.Commenting.DocComment.MissingShort'/>
        <exclude name='Generic.Commenting.DocComment.ParamNotFirst'/>
        <exclude name='Generic.Commenting.DocComment.TagValueIndent'/>
        <exclude name='Generic.Files.EndFileNewline.NotFound'/>
        <exclude name='Generic.Files.ExecutableFile.Executable'/>
        <exclude name='Generic.Files.LineEndings.InvalidEOLChar'/>
        <exclude name='Generic.Files.LineLength.TooLong'/>
        <exclude name='Generic.Files.LowercasedFilename.NotFound'/>
        <exclude name='Generic.Formatting.NoSpaceAfterCast.SpaceFound'/>
        <exclude name='Generic.Formatting.SpaceAfterNot.Incorrect'/>
        <exclude name='Generic.Formatting.SpaceBeforeCast.NoSpace'/>
        <exclude name='Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine'/>
        <exclude name='Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine'/>
        <exclude name='Generic.PHP.ClosingPHPTag.NotFound'/>
        <exclude name='Generic.PHP.LowerCaseConstant.Found'/>
        <exclude name='Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed'/>
    </rule>

    <rule ref='PEAR'>
        <exclude name='PEAR.Commenting.ClassComment.MissingAuthorTag'/>
        <exclude name='PEAR.Commenting.ClassComment.MissingCategoryTag'/>
        <exclude name='PEAR.Commenting.ClassComment.MissingLicenseTag'/>
        <exclude name='PEAR.Commenting.ClassComment.MissingLinkTag'/>
        <exclude name='PEAR.Commenting.FileComment.Missing'/>
        <exclude name='PEAR.Commenting.FunctionComment.MissingParamComment'/>
        <exclude name='PEAR.Commenting.FunctionComment.MissingReturn'/>
        <exclude name='PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore'/>
        <exclude name='PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore'/>
        <exclude name='PEAR.WhiteSpace.ScopeIndent.IncorrectExact'/>
    </rule>

    <rule ref='PSR1'/>

    <rule ref='PSR2'>
        <exclude name='PSR2.Classes.ClassDeclaration.CloseBraceAfterBody'/>
        <exclude name='PSR2.Files.EndFileNewline.NoneFound'/>
    </rule>

    <rule ref='Squiz'>
        <exclude name='Squiz.Commenting.BlockComment.WrongStart'/>
        <exclude name='Squiz.Commenting.ClassComment.TagNotAllowed'/>
        <exclude name='Squiz.Commenting.ClosingDeclarationComment.Missing'/>
        <exclude name='Squiz.Commenting.FileComment.Missing'/>
        <exclude name='Squiz.Commenting.FunctionComment.EmptyThrows'/>
        <exclude name='Squiz.Commenting.FunctionComment.IncorrectParamVarName'/>
        <exclude name='Squiz.Commenting.FunctionComment.InvalidReturn'/>
        <exclude name='Squiz.Commenting.FunctionComment.MissingParamComment'/>
        <exclude name='Squiz.Commenting.FunctionComment.MissingReturn'/>
        <exclude name='Squiz.Commenting.InlineComment.DocBlock'/>
        <exclude name='Squiz.Commenting.LongConditionClosingComment.Missing'/>
        <exclude name='Squiz.Commenting.VariableComment.IncorrectVarType'/>
        <exclude name='Squiz.Commenting.VariableComment.TagNotAllowed'/>
        <exclude name='Squiz.ControlStructures.ElseIfDeclaration.NotAllowed'/>
        <exclude name='Squiz.ControlStructures.InlineIfDeclaration.NoBrackets'/>
        <exclude name='Squiz.ControlStructures.SwitchDeclaration.BreakIndent'/>
        <exclude name='Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak'/>
        <exclude name='Squiz.Files.FileExtension.ClassFound'/>
        <exclude name='Squiz.Formatting.OperatorBracket.MissingBrackets'/>
        <exclude name='Squiz.Objects.ObjectInstantiation.NotAssigned'/>
        <exclude name='Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue'/>
        <exclude name='Squiz.Operators.ComparisonOperatorUsage.NotAllowed'/>
        <exclude name='Squiz.PHP.DisallowBooleanStatement.Found'/>
        <exclude name='Squiz.PHP.DisallowComparisonAssignment.AssignedComparison'/>
        <exclude name='Squiz.PHP.DisallowInlineIf.Found'/>
        <exclude name='Squiz.Strings.ConcatenationSpacing.PaddingFound'/>
        <exclude name='Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose'/>
        <exclude name='Squiz.WhiteSpace.ObjectOperatorSpacing.Before'/>
    </rule>

    <rule ref='./src/CustomRules/ruleset.xml'/>

    <rule ref='./vendor/slevomat/coding-standard/SlevomatCodingStandard/ruleset.xml'>
        <exclude name='SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming.SuperfluousPrefix'/>
        <exclude name='SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix'/>
        <exclude name='SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix'/>
        <exclude name='SlevomatCodingStandard.Classes.SuperfluousTraitNaming.SuperfluousSuffix'/>
        <exclude name='SlevomatCodingStandard.Commenting.EmptyComment.EmptyComment'/>
        <exclude name='SlevomatCodingStandard.Commenting.RequireOneLineDocComment.MultiLineDocComment'/>
        <exclude name='SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment'/>
        <exclude name='SlevomatCodingStandard.Commenting.UselessFunctionDocComment.UselessDocComment'/>
        <exclude name='SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator.DisallowedShortTernaryOperator'/>
        <exclude name='SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed'/>
        <exclude name='SlevomatCodingStandard.ControlStructures.NewWithoutParentheses.UselessParentheses'/>
        <exclude name='SlevomatCodingStandard.ControlStructures.RequireMultiLineTernaryOperator.MultiLineTernaryOperatorNotUsed'/>
        <exclude name='SlevomatCodingStandard.ControlStructures.RequireYodaComparison.RequiredYodaComparison'/>
        <exclude name='SlevomatCodingStandard.Files.LineLength'/>
        <exclude name='SlevomatCodingStandard.Functions.DisallowArrowFunction'/>
        <exclude name='SlevomatCodingStandard.Functions.TrailingCommaInCall.MissingTrailingComma'/>
        <exclude name='SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation.NonFullyQualifiedClassName'/>
        <exclude name='SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions.NonFullyQualifiedException'/>
        <exclude name='SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants.NonFullyQualified'/>
        <exclude name='SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions.NonFullyQualified'/>
        <exclude name='SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces.NonFullyQualified'/>
        <exclude name='SlevomatCodingStandard.Numbers.DisallowNumericLiteralSeparator'/>
        <exclude name='SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPostDecrementOperator'/>
        <exclude name='SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPostIncrementOperator'/>
        <exclude name='SlevomatCodingStandard.PHP.DisallowReference'/>
        <exclude name='SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion'/>
        <exclude name='SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax.DisallowedArrayTypeHintSyntax'/>
        <exclude name='SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax.DisallowedArrayTypeHintSyntax'/>
        <exclude name='SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint.DisallowedMixedTypeHint'/>
        <exclude name='SlevomatCodingStandard.TypeHints.ParameterTypeHint.UselessAnnotation'/>
        <exclude name='SlevomatCodingStandard.TypeHints.PropertyTypeHint.UselessAnnotation'/>
        <exclude name='SlevomatCodingStandard.TypeHints.ReturnTypeHint.UselessAnnotation'/>
        <exclude name='SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversableParameterTypeHintSpecification'/>
        <exclude name='SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversablePropertyTypeHintSpecification'/>
        <exclude name='SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversableReturnTypeHintSpecification'/>
        <exclude name='SlevomatCodingStandard.TypeHints.TypeHintDeclaration.UselessDocComment'/>
    </rule>

    <rule ref='./vendor/stesie/phpcs-doctrine-annotation-rules/src/DoctrineAnnotationCodingStandard/ruleset.xml'/>

    <rule ref='Generic.Metrics.CyclomaticComplexity'>
        <properties>
            <property name='complexity' value='15'/>
            <property name='absoluteComplexity' value='15'/>
        </properties>
    </rule>

    <rule ref='Generic.Metrics.NestingLevel'>
        <properties>
            <property name='nestingLevel' value='15'/>
            <property name='absoluteNestingLevel' value='15'/>
        </properties>
    </rule>

    <rule ref='Squiz.Functions.FunctionDeclarationArgumentSpacing'>
        <properties>
            <property name='equalsSpacing' value='1'/>
        </properties>
    </rule>

    <rule ref='Squiz.WhiteSpace.FunctionSpacing'>
        <properties>
            <property name='spacing' value='1'/>
        </properties>
    </rule>

    <rule ref='SlevomatCodingStandard.Commenting.DocCommentSpacing'>
        <properties>
            <property name='annotationsGroups' type='array'>
                <element value='@var'/>
                <element value='@package'/>
                <element value='@ORM\'/>
                <element value='@ODM\'/>
                <element value='@Serializer\'/>
                <element value='@ApiRoute'/>
                <element value='@GraphQL\'/>
                <element value='@param'/>
                <element value='@return'/>
                <element value='@throws'/>
            </property>
        </properties>
    </rule>

    <rule ref='SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly'>
        <properties>
            <property name='searchAnnotations' value='true'/>
        </properties>
    </rule>

    <rule ref='SlevomatCodingStandard.Namespaces.UnusedUses'>
        <properties>
            <property name='searchAnnotations' value='true'/>
        </properties>
    </rule>

    <rule ref='SlevomatCodingStandard.TypeHints.DeclareStrictTypes'>
        <properties>
            <property name='newlinesCountBetweenOpenTagAndDeclare' value='0'/>
            <property name='spacesCountAroundEqualsSign' value='0'/>
        </properties>
    </rule>

    <rule ref='SlevomatCodingStandard.Whitespaces.DuplicateSpaces'>
        <properties>
            <property name='ignoreSpacesBeforeAssignment' value='true'/>
            <property name='ignoreSpacesInAnnotation' value='true'/>
            <property name='ignoreSpacesInComment' value='true'/>
            <property name='ignoreSpacesInParameters' value='true'/>
        </properties>
    </rule>

    <rule ref='SlevomatCodingStandard.Files.TypeNameMatchesFileName'>
        <properties>
            <property name='rootNamespaces' type='array'>
                <element key='src' value='Bruha\CodingStandard'/>
                <element key='tests' value='Tests'/>
            </property>
        </properties>
    </rule>
</ruleset>